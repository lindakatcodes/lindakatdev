---
import type { CollectionEntry } from "astro:content";
import CardWrapper from "./CardWrapper.astro";

export interface Props {
  blogBit: CollectionEntry<"blog">;
}

const { blogBit } = Astro.props;
const { title, description, publishedDate, remoteLink, remoteSrc } = blogBit.data;

const dateString = new Date(publishedDate).toLocaleDateString("en-us", {
  dateStyle: "medium",
});
const postUrl = remoteLink ?? `/blog/${blogBit.slug}`;
const isLocal = remoteLink === undefined;
const readPostCTA = isLocal ? 'Read post ➜' : `Read on ${remoteSrc} ➜`;
---

<CardWrapper class="fill-card">
  <a href={postUrl} class="pr-link">
    <h2 class="pr-title">{title}</h2>
    <div class="pr-flex">
      <p class="pr-date">
        {dateString}
      </p>
      <div class="decoration"></div>
    </div>
    <p class="pr-blurb">{description}</p>
    <div class="pr-flex">
      <p class="pr-src">{isLocal ? 'Local' : 'Remote'}</p>
      <div class="decoration"></div>
      <p class="pr-read-more">{readPostCTA}</p>
    </div>
  </a>
</CardWrapper>

<style>
  .fill-card {  
    block-size: 100%;
  }

  .pr-link {
    text-decoration: none;
    padding: var(--s8) var(--s16);
    min-block-size: 100%;
    display: grid;
    gap: var(--s8);
  }

  .pr-title {
    font-size: var(--h6);
    margin: 0;
  }

  .pr-date {
    color: var(--text-main);
    font-family: var(--body-font);
    font-size: var(--b-sm);
    opacity: 0.8;
  }
  
  .pr-flex {
    display: flex;
    align-items: center;
    gap: var(--s8);
  }

  .decoration {
    height: 2px;
    flex-grow: 1;
    background-color: var(--text-main);
    border-radius: var(--s4);
    opacity: 0.8;
  }

  .pr-src, .pr-read-more {
    opacity: 0.8;
  }

  .blurb {
    
  }
</style>
