---
import type { CollectionEntry } from "astro:content";
import Icon from 'astro-icon';

interface Props {
  praise: CollectionEntry<"praises">;
}

const { praise } = Astro.props;
const praiseData = praise.data;
---

<div class="wrapper">
  <p class="decorator quotemark">‚ùù</p>
    {praiseData.featured ? (
      <p class="quote">{praiseData.quote[0]}</p>
    ) : (
      praiseData.quote.map((piece => <p class="quote">{piece}</p>))
    )}
    <p class="decorator speaker">{praiseData.name}</p>
    <a href={praiseData.srcLink}>
      <p>Honest it's real </p>
      <Icon name="external-link" class="link-icon" />
    </a>
</div>

<style>
  .wrapper {
    width: 90%;
    padding: 0.5rem;
    background: var(--bg-shadow);
    border-radius: 5px;
    display: grid;
    grid-template-columns: 1fr;
    gap: 0.5rem;
  }

  .decorator {
    width: 90%;
    margin: 0 auto;
    text-transform: uppercase;
    font-size: 1.25rem;
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    gap: 0.5rem;
    align-items: center;
  }

  .decorator::before,
  .decorator::after {
    content: "";
    height: 2px;
    background: var(--gradient);
    border-radius: 3px;
  }

  .quotemark {
    font-size: 3rem;
    line-height: 48px;
  }

  .quotemark::before,
  .quotemark::after {
    margin-bottom: 1.25rem;
  }

  .speaker {
    margin-top: 1.25rem;
  }

  .quote {
    width: 85%;
    margin: 0 auto;
    font-size: 1.25rem;
    text-wrap: pretty;
  }

  a {
    color: var(--blue);
    text-underline-offset: 2px;
    display: flex;
    align-items: center;
    justify-content: flex-end;
  }

  a p {
    color: var(--blue);
    font-size: 0.8rem;
    padding-right: 0.25rem;
  }

  .link-icon {
    width: var(--sm);
    height: var(--sm);
    color: var(--blue);
  }
</style>
